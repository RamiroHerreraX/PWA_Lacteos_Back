openapi: 3.0.0
info:
  title: üéØ PWA Lacteos - API Documentation & Testing Matrix
  description: |
    # Sistema de Gesti√≥n de Usuarios con Autenticaci√≥n 2FA
    ## Descripci√≥n General
    
    ## üìã Matriz de Pruebas Integrada
    
    Esta documentaci√≥n sirve como herramienta para ejecutar la matriz de pruebas del sistema.
    
    ### Funcionalidades a probar:
    - ‚úÖ Autenticaci√≥n con verificaci√≥n en dos factores (2FA)
    - ‚úÖ Recuperaci√≥n de usuario y contrase√±a por roles
    - ‚úÖ Gesti√≥n de usuarios (Admin, Editor, Lector)
    - ‚úÖ Validaci√≥n de seguridad y roles
    
    ### Usuarios de prueba:
    - **Admin**: admin@mail.com / Admin123!
    - **Editor**: editor@mail.com / Editor123!  
    - **Lector**: lector@mail.com / Lector123!
    
    ### Flujos de prueba:
    1. Autenticaci√≥n ‚Üí 2FA ‚Üí Acceso
    2. Recuperaci√≥n ‚Üí OTP ‚Üí Restablecimiento
    3. CRUD usuarios seg√∫n rol
  version: 1.0.0
  contact:
    name: Equipo de Desarrollo
    email: desarrollo@lacteos.com

servers:
  - url: http://localhost:3000/api
    description: üß™ Servidor de Desarrollo y Pruebas

security:
  - bearerAuth: []

tags:
  - name: 1Ô∏è‚É£ Autenticaci√≥n 2FA
    description: Pruebas de login y verificaci√≥n en dos factores
  - name: 2Ô∏è‚É£ Recuperaci√≥n de Acceso
    description: Pruebas de recuperaci√≥n por roles (HU-02)
  - name: 3Ô∏è‚É£ Gesti√≥n de Usuarios
    description: Pruebas CRUD seg√∫n roles de usuario
  - name: üß™ Matriz de Pruebas
    description: Ejecuci√≥n guiada de casos de prueba

paths:
  # ==================== 1Ô∏è‚É£ AUTENTICACI√ìN 2FA ====================
  /login:
    post:
      security: [] 
      tags: [1Ô∏è‚É£ Autenticaci√≥n 2FA]
      summary: TC-AUTH-001: Login con credenciales v√°lidas + 2FA
      description: |
        **Caso de prueba:** Autenticaci√≥n exitosa con verificaci√≥n en dos factores
        
        **Precondiciones:** Usuario registrado en BD
        
        **Datos de prueba:**
        - Admin: email: admin@mail.com, password: Admin123!
        - Editor: email: editor@mail.com, password: Editor123!
        - Lector: email: lector@mail.com, password: Lector123!
        
        **Resultado esperado:** 200 OK + mensaje de OTP enviado
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, password]
              properties:
                email:
                  type: string
                  format: email
                  example: "admin@mail.com"
                  description: Email del usuario registrado
                password:
                  type: string
                  example: "Admin123!"
                  description: Contrase√±a v√°lida
            examples:
              admin:
                summary: Credenciales Admin
                value:
                  email: "admin@mail.com"
                  password: "Admin123!"
              editor:
                summary: Credenciales Editor  
                value:
                  email: "editor@mail.com"
                  password: "Editor123!"
              lector:
                summary: Credenciales Lector
                value:
                  email: "lector@mail.com"
                  password: "Lector123!"
      responses:
        '200':
          description: ‚úÖ √âXITO - C√≥digo 2FA enviado al correo
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "C√≥digo 2FA enviado al correo"
                  otp:
                    type: string
                    description: "Solo en desarrollo - c√≥digo para pruebas"
        '400':
          description: ‚ùå ERROR - Credenciales incorrectas
        '500':
          description: ‚ö†Ô∏è ERROR - Problema en el servidor

  /verificar-otp:
    post:
      security: [] 
      tags: [Autenticaci√≥n]
      summary: Verificar c√≥digo OTP
      description: Validar c√≥digo de autenticaci√≥n de dos factores y registrar geolocalizaci√≥n del inicio de sesi√≥n
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, otp]
              properties:
                email:
                  type: string
                  format: email
                  example: "admin@mail.com"
                otp:
                  type: string
                  example: "123456"
                  description: "En desarrollo, revisa la consola del servidor para el c√≥digo"
      responses:
        '200':
          description: ‚úÖ √âXITO - Autenticaci√≥n completada
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Autenticaci√≥n exitosa"
                  token:
                    type: string
                    example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                  rol:
                    type: string
                    example: "admin"
                  ubicacion:
                    type: object
                    description: Datos de geolocalizaci√≥n aproximada del inicio de sesi√≥n
                    properties:
                      ip:
                        type: string
                        example: "187.190.38.55"
                      country:
                        type: string
                        example: "MX"
                      region:
                        type: string
                        example: "CMX"
                      city:
                        type: string
                        example: "Ciudad de M√©xico"
                      ll:
                        type: array
                        items:
                          type: number
                        example: [19.42847, -99.12766]
        '400':
          description: ‚ùå ERROR - OTP incorrecto o expirado

  # ==================== 2Ô∏è‚É£ RECUPERACI√ìN DE ACCESO ====================
  /reset/usuario:
    post:
      tags: [2Ô∏è‚É£ Recuperaci√≥n de Acceso]
      summary: TC-REC-001: Recuperar nombre de usuario
      description: |
        **Caso de prueba:** Recuperaci√≥n exitosa de nombre de usuario
        
        **HU-02:** Permite a usuarios recuperar acceso a su cuenta
        
        **Flujo:** Ingresar email ‚Üí Recibir usuario por correo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email]
              properties:
                email:
                  type: string
                  format: email
                  example: "admin@mail.com"
      responses:
        '200':
          description: ‚úÖ √âXITO - Usuario enviado al correo
        '404':
          description: ‚ùå ERROR - Correo no registrado

  /reset/enviar:
    post:
      tags: [2Ô∏è‚É£ Recuperaci√≥n de Acceso]
      summary: TC-REC-003/004: Solicitar recuperaci√≥n de contrase√±a
      description: |
        **Caso de prueba:** Env√≠o de enlace/OTP seg√∫n rol
        
        **Comportamiento por rol:**
        - Admin: Recibe OTP adicional (flujo reforzado)
        - Editor/Lector: Recibe enlace directo
        
        **Validar gesti√≥n de roles y seguridad**
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email]
              properties:
                email:
                  type: string
                  format: email
                  example: "admin@mail.com"
            examples:
              admin:
                summary: Usuario Admin
                value:
                  email: "admin@mail.com"
              editor:
                summary: Usuario Editor
                value:
                  email: "editor@mail.com"
              lector:
                summary: Usuario Lector  
                value:
                  email: "lector@mail.com"
      responses:
        '200':
          description: ‚úÖ √âXITO - Proceso iniciado seg√∫n rol
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    properties:
                      message:
                        type: string
                        example: "Se envi√≥ un OTP adicional para administradores"
                      token:
                        type: string
                        description: "Token para verificaci√≥n OTP"
                  - type: object
                    properties:
                      message:
                        type: string
                        example: "Se envi√≥ un enlace para restablecer tu contrase√±a"

  /reset/verificar-otp:
    post:
      tags: [2Ô∏è‚É£ Recuperaci√≥n de Acceso]
      summary: TC-REC-005: Verificar OTP para administradores
      description: |
        **Caso de prueba:** Verificaci√≥n OTP en recuperaci√≥n de admin
        
        **Seguridad:** Validaci√≥n adicional para roles administrativos
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, otp, token]
              properties:
                email:
                  type: string
                  format: email
                  example: "admin@mail.com"
                otp:
                  type: string
                  example: "123456"
                token:
                  type: string
                  example: "token_recibido_en_el_paso_anterior"
      responses:
        '200':
          description: ‚úÖ √âXITO - OTP verificado, enlace enviado
        '400':
          description: ‚ùå ERROR - OTP incorrecto o expirado

  # ==================== 3Ô∏è‚É£ GESTI√ìN DE USUARIOS ====================
  /usuario:
    get:
      tags: [3Ô∏è‚É£ Gesti√≥n de Usuarios]
      summary: TC-USR-001/002/003: Listar usuarios (todos los roles)
      description: |
        **Caso de prueba:** Listado de usuarios seg√∫n permisos de rol
        
        **Validar:** Todos los roles pueden ver la lista de usuarios
      responses:
        '200':
          description: ‚úÖ √âXITO - Lista de usuarios obtenida
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Usuario'
        '500':
          description: ‚ùå ERROR - Problema en el servidor

  /usuario/nuevo:
    post:
      tags: [3Ô∏è‚É£ Gesti√≥n de Usuarios]
      summary: TC-USR-004: Crear nuevo usuario (solo Admin)
      description: |
        **Caso de prueba:** Creaci√≥n de usuario exitosa
        
        **Permisos:** Solo usuarios con rol 'admin' pueden crear usuarios
        
        **Validaciones:**
        - Email v√°lido y √∫nico
        - Contrase√±a segura (8+ chars, may√∫scula, min√∫scula, n√∫mero, especial)
        - Rol v√°lido (admin, editor, lector)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [nombre, email, password, rol]
              properties:
                nombre:
                  type: string
                  example: "Juan P√©rez"
                  minLength: 2
                email:
                  type: string
                  format: email
                  example: "nuevo@mail.com"
                password:
                  type: string
                  example: "NuevaPass123!"
                  description: "M√≠nimo 8 caracteres, 1 may√∫scula, 1 min√∫scula, 1 n√∫mero, 1 especial"
                rol:
                  type: string
                  enum: [admin, editor, lector]
                  example: "lector"
      responses:
        '201':
          description: ‚úÖ √âXITO - Usuario creado exitosamente
        '400':
          description: ‚ùå ERROR - Datos inv√°lidos o email duplicado
        '403':
          description: ‚ö†Ô∏è DENEGADO - Sin permisos de administrador

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Usuario:
      type: object
      properties:
        id:
          type: integer
          example: 1
        nombre:
          type: string
          example: "Admin User"
        email:
          type: string
          example: "admin@mail.com"
        rol:
          type: string
          example: "admin"
        creado_en:
          type: string
          format: date-time
          example: "2024-01-15T10:30:00Z"
    Error:
      type: object
      properties:
        error:
          type: string
          example: "Error descriptivo"
        message:
          type: string
          example: "Mensaje detallado del error"

  responses:
    Unauthorized:
      description: Token de acceso faltante o inv√°lido
    Forbidden:
      description: No tiene permisos para esta acci√≥n


